#!/usr/bin/ruby
#Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.
#
#Example1:
#
#a = 2
#b = [3]
#
#Result: 8
#Example2:
#
#a = 2
#b = [1,0]
#
#Result: 1024
#
#
#有这样几个结论：
# (a*b)%m = (a%m * b%m)%m
# (a^b)%m = (a%m)^b ---------------------- 1
# (a+b)%m = (a%m + b%m)%m ---------------- 2
# Pigeonhole Principle告诉我们a^n%m的结果会出现循环，假设以k个数为一次循环，那么
# a^n%m = [a^(n%k)]%m -------------------- 3
#
# 由123得出下面的解法
# a^[bn,..,b1]%m = ( ( (a%m)^[bn,..,bi]%k * 10^i%m)%m + (a%m)^[bi-1,..,b1]%k )%m
# 其中 k是a^i%m结果出现循环的个数

def superPow(a, b)
	if a<2 then
		return a
	end
	base = a%1337
	if base == 0 then
		return 0
	end
	if b.size<=0 then
		return 1
	end
	k = pigeonHoleCount(base, 1337)
	# puts "k: #{k}"
	mTenCnt = pigeonHoleCount(10, k)
	# puts "mTenCnt: #{mTenCnt}"
	e = arrayMod(b,0,b.size-1,k,mTenCnt)
	# puts "e: #{e}"
	return powMod(base,e,1337,k)
end

#mTenCnt是10^n%m结果出现循环的个数
def arrayMod(a, l, r, m, mTenCnt)
	if l>=r then
		res = a[l]%m
	else
		mid = l+(r-l)/2
		res = ( (arrayMod(a, l, mid, m, mTenCnt)*powMod(10, r-mid, m, mTenCnt))%m + arrayMod(a, mid+1, r, m, mTenCnt) ) % m
	end
	# puts "#{a[l,r-l+1]}%#{m} res:#{res}"
	return res
end

def pigeonHoleCount(n, m)
	uniq = Hash.new
	base = n%m
	i = 0
	j = 1
	# uniq[j] = i
	while true
		j *= base
		j %= m
		if uniq[j].nil? then
			i += 1
			uniq[j] = i
			# puts "#{j}->#{uniq[j]}"
		else
			break
		end
	end
	return i
end

#这个函数是为了防止求base^e时产生过大的数字
def powMod(base, e, m, mCnt)
	if e<1 then
		return 1
	else
		cnt = mCnt
		i = e%cnt
		if i==0 then
			return 0
		end
		res = 1
		while i>0 do
			res *= base
			res %= m
			i -= 1
		end
		# puts "powMod -> base:#{base} e:#{e} m:#{m} res:#{res}"
		return res
	end
end

# puts pigeonHoleCount 10,1337
# puts powMod(10, 4, 1337, pigeonHoleCount(10,1337))
# puts powMod(10, 1, 1337, pigeonHoleCount(10,1337))
# a = 1337
# b = Array[3]
# a = 78267
# b = Array[1,7,7,4,3,1,7,0,1,4,4,9,2,8,5,0,0,9,3,1,2,5,9,6,0,9,9,0,9,6,0,5,3,7,9,8,8,9,8,2,5,4,1,9,3,8,0,5,9,5,6,1,1,8,9,3,7,8,5,8,5,5,3,0,4,3,1,5,4,1,7,9,6,8,8,9,8,0,6,7,8,3,1,1,1,0,6,8,1,1,6,6,9,1,8,5,6,9,0,0,1,7,1,7,7,2,8,5,4,4,5,2,9,6,5,0,8,1,0,9,5,8,7,6,0,6,1,8,7,2,9,8,1,0,7,9,4,7,6,9,2,3,1,3,9,9,6,8,0,8,9,7,7,7,3,9,5,5,7,4,9,8,3,0,1,2,1,5,0,8,4,4,3,8,9,3,7,5,3,9,4,4,9,3,3,2,4,8,9,3,3,8,2,8,1,3,2,2,8,4,2,5,0,6,3,0,9,0,5,4,1,1,8,0,4,2,5,8,2,4,2,7,5,4,7,6,9,0,8,9,6,1,4,7,7,9,7,8,1,4,4,3,6,4,5,2,6,0,1,1,5,3,8,0,9,8,8,0,0,6,1,6,9,6,5,8,7,4,8,9,9,2,4,7,7,9,9,5,2,2,6,9,7,7,9,8,5,9,8,5,5,0,3,5,8,9,5,7,3,4,6,4,6,2,3,5,2,3,1,4,5,9,3,3,6,4,1,3,3,2,0,0,4,4,7,2,3,3,9,8,7,8,5,5,0,8,3,4,1,4,0,9,5,5,4,4,9,7,7,4,1,8,7,5,2,4,9,7,9,1,7,8,9,2,4,1,1,7,6,4,3,6,5,0,2,1,4,3,9,2,0,0,2,9,8,4,5,7,3,5,8,2,3,9,5,9,1,8,8,9,2,3,7,0,4,1,1,8,7,0,2,7,3,4,6,1,0,3,8,5,8,9,8,4,8,3,5,1,1,4,2,5,9,0,5,3,1,7,4,8,9,6,7,2,3,5,5,3,9,6,9,9,5,7,3,5,2,9,9,5,5,1,0,6,3,8,0,5,5,6,5,6,4,5,1,7,0,6,3,9,4,4,9,1,3,4,7,7,5,8,2,0,9,2,7,3,0,9,0,7,7,7,4,1,2,5,1,3,3,6,4,8,2,5,9,5,0,8,2,5,6,4,8,8,8,7,3,1,8,5,0,5,2,4,8,5,1,1,0,7,9,6,5,1,2,6,6,4,7,0,9,5,6,9,3,7,8,8,8,6,5,8,3,8,5,4,5,8,5,7,5,7,3,2,8,7,1,7,1,8,7,3,3,6,2,9,3,3,9,3,1,5,1,5,5,8,1,2,7,8,9,2,5,4,5,4,2,6,1,3,6,0,6,9,6,1,0,1,4,0,4,5,5,8,2,2,6,3,4,3,4,3,8,9,7,5,5,9,1,8,5,9,9,1,8,7,2,1,1,8,1,5,6,8,5,8,0,2,4,4,7,8,9,5,9,8,0,5,0,3,5,5,2,6,8,3,4,1,4,7,1,7,2,7,5,8,8,7,2,2,3,9,2,2,7,3,2,9,0,2,3,6,9,7,2,8,0,8,1,6,5,2,3,0,2,0,0,0,9,2,2,2,3,6,6,0,9,1,0,0,3,5,8,3,2,0,3,5,1,4,1,6,8,7,6,0,9,8,0,1,0,4,5,6,0,2,8,2,5,0,2,8,5,2,3,0,2,6,7,3,0,0,2,1,9,0,1,9,9,2,0,1,6,7,7,9,9,6,1,4,8,5,5,6,7,0,6,1,7,3,5,9,3,9,0,5,9,2,4,8,6,6,2,2,3,9,3,5,7,4,1,6,9,8,2,6,9,0,0,8,5,7,7,0,6,0,5,7,4,9,6,0,7,8,4,3,9,8,8,7,4,1,5,6,0,9,4,1,9,4,9,4,1,8,6,7,8,2,5,2,3,3,4,3,3,1,6,4,1,6,1,5,7,8,1,9,7,6,0,8,0,1,4,4,0,1,1,8,3,8,3,8,3,9,1,6,0,7,1,3,3,4,9,3,5,2,4,2,0,7,3,3,8,7,7,8,8,0,9,3,1,2,2,4,3,3,3,6,1,6,9,6,2,0,1,7,5,6,2,5,3,5,0,3,2,7,2,3,0,3,6,1,7,8,7,0,4,0,6,7,6,6,3,9,8,5,8,3,3,0,9,6,7,1,9,2,1,3,5,1,6,3,4,3,4,1,6,8,4,2,5]
# a = 195412
# b = Array[3,0,3,9,7,2,2,0,4,3,8,2,5,8,6,8,3,3,9,2,6,5,7,2,8,3,0,4,6,7,7,8,0,2,7,7,4,2,8,1,7,6,5,4,6,1,2,2,4,3,4,2,8,1,5,9,5,7,3,3,5,2,1,5,5,1,4,1,3,2,2,2,1,7,7,7,0,9,9,6,5,3,9,5,7,4,4,2,3,0,5,8,2,8,5,7,9,2,9,4,4,3,7,7,3,4,5,3,5,6,2,0,2,1,6,9,7,2,3,0,2,0,1,5,8,8,4,0,0,3,4,7,7,3,4,0,9,1,5,5,8,7,7,0,0,3,1,9,8,6,0,0,6,3,7,6,3,2,6,4,5,3,1,4,8,7,4,8,9,2,5,7,9,2,9,0,8,2,9,6,8,1,6,4,6,4,2,0,6,1,4,3,6,7,8,4,4,4,2,3,6,7,2,6,2,1,8,0,3,9,6,3,3,4,7,9,8,2,9,6,3,5,2,9,4,0,3,9,6,8,4,3,7,7,1,9,0,9,9,6,0,5,9,3,2,9,3,0,1,4,9,4,0,1,3,4,3,8,5,9,8,2,2,6,9,5,5,1,6,7,7,7,4,7,0,6,8,5,9,9,2,0,3,2,1,8,8,6,6,6,5,7,8,0,3,9,5,0,0,2,7,0,1,2,9,3,0,7,9,9,6,1,9,1,5,2,9,5,8,7,1,6,4,1,6,7,0,3,0,3,7,7,3,8,1,2,2,2,9,3,1,5,6,3,6,1,5,7,8,4,4,2,0,1,3,8,0,6,3,0,9,1,0,2,1,1,6,3,3,5,8,7,2,4,0,0,7,7,7,6,3,3,8,5,6,3,3,7,9,9,9,8,0,9,2,1,1,8,7,6,3,7,3,7,2,5,7,1,5,4,7,8,0,7,4,6,1,9,5,0,8,5,1,0,4,3,4,7,2,1,4,7,0,9,5,4,7,2,6,2,9,3,0,9,3,4,7,4,6,3,6,4,0,7,5,4,1,9,2,5,2,8,2,4,7,7,9,4,2,5,6,1,0,9,2,3,3,1,9,1,6,6,6,6,3,3,1,6,4,5,3,8,3,6,2,2,5,1,7,9,6,5,2,7,4,4,2,0,8,2,1,4,8,9,3,3,2,6,2,8,1,5,6,6,3,9,8,9,0,7,8,9,3,1,8,7,7,0,9,7,2,1,4,2,0,7,8,5,3,0,3,6,7,0,2,1,1,2,0,1,0,0,2,5,3,0,4,3,1,4,0,5,7,6,0,7,3,0,4,8,0,0,4,9,2,8,0,3,3,0,6,3,3,9,0,8,1,4,1,4,8,4,2,5,0,2,5,4,4,1,4,6,1,9,5,3,9,6,8,2,8,5,7,1,6,7,0,7,2,3,2,2,7,4,0,0,8,5,6,2,8,0,8,0,9,3,5,1,1,4,3,0,1,1,3,7,0,5,4,2,9,8,7,8,2,7,8,2,4,4,4,2,5,4,2,6,0,0,9,1,4,3,1,5,6,7,4,8,2,8,3,1,7,0,2,1,7,0,4,1,7,0,3,4,5,8,2,7,8,2,8,4,7,2,1,5,9,5,3,1,5,6,5,4,6,7,6,5,9,2,6,6,2,2,0,9,0,3,6,0,7,7,6,4,9,9,9,0,6,2,3,1,9,0,6,7,7,4,3,9,6,1,5,8,3,8,0,5,3,6,7,0,3,3,4,4,4,3,6,0,5,0,4,6,0,2,4,0,6,9,9,4,0,6,4,4,4,4,9,7,3,9,7,8,4,3,3,9,6,9,1,4,1,5,0,4,7,6,6,5,5,5,9,6,3,6,2,8,0,3,7,3,2,7,2,7,0,7,6,7,8,7,1,2,5,3,6,4,0,2,0,7,9,1,3,2,7,7,2,0,1,0,5,3,9,9,0,9,8,8,8,9,8,1,1,5,5,9,9,7,3,1,6,2,5,2,6,4,9,9,4,0,1,2,4,2,1,6,1,2,7,0,1,5,1,2,0,8,3,1,7,6,3,4,8,8,6,6,2,5,7,9,6,8,1,2,2,4,8,4,6,5,6,9,2,9,3,4,8,6,6,7,2,9,1,0,7,7,9,1,5,6,0,3,7,1,5,9,8,5,3,6,1,1,6,5,1,9,0,1,6,6,8,0,5,2,1,4,1,2,7,6,8,8,9,5,1,6,5,9,2,0,8,3,2,4,0,5,5,0,6]
a = 2139430
# b = Array[1,0]
b = Array[2,7,1,6,6,6,3,9,9,3,1,1,7,7,4,4,7,3,4,0,3,5,5,6,5,6,0,9,5,1,2,5,8,3,3,6,9,8,8,0,1,1,3,8,0,9,5,8,2,9,0,6,6,5,4,2,3,5,3,9,8,5,6,7,1,1,5,2,0,5,5,3,6,8,4,7,8,9,7,2,0,9,8,8,4,5,2,7,2,6,8,0,3,6,9,6,8,7,9,0,2,4,3,9,4,7,8,4,8,7,7,0,6,7,9,2,2,1,9,4,9,0,7,5,6,6,1,4,3,2,6,8,8,0,7,3,9,7,9,8,6,6,8,2,4,9,4,8,1,5,5,0,7,2,7,4,0,1,0,6,3,7,4,4,9,3,7,8,0,8,6,6,5,7,0,1,6,6,9,9,3,4,2,1,8,9,7,9,0,9,5,6,6,9,0,7,4,9,6,4,7,4,2,4,1,4,5,0,2,7,9,5,1,1,6,2,1,3,1,3,3,8,9,1,9,9,9,3,0,7,9,8,1,3,2,5,7,0,5,9,7,6,4,0,8,3,2,1,8,3,6,3,3,8,5,2,9,6,5,0,5,6,0,6,9,2,3,6,4,0,7,1,7,4,2,7,9,4,0,7,0,8,1,5,6,8,8,6,6,5,6,1,2,6,9,1,0,3,0,5,3,9,8,2,3,0,1,2,7,1,2,9,0,3,4,8,3,4,4,9,0,2,2,2,0,1,5,3,6,5,8,2,5,8,4,0,9,6,5,8,9,7,7,1,2,3,0,7,8,6,6,8,1,0,2,1,1,7,4,8,5,4,2,2,3,6,4,4,4,9,2,6,8,1,9,2,6,1,9,4,8,7,4,9,9,8,2,1,6,7,1,3,3,3,5,6,1,1,0,8,3,4,4,3,7,3,6,4,5,7,0,5,7,5,6,8,3,8,9,1,7,2,6,1,7,1,7,9,5,0,7,8,6,3,1,4,8,9,0,5,9,0,0,8,7,8,6,3,9,8,4,6,0,1,9,0,4,9,1,9,9,8,9,7,3,3,3,1,2,3,7,3,4,9,3,3,0,0,6,9,0,1,5,2,4,7,2,0,6,3,2,5,3,1,4,6,4,8,0,9,1,9,4,7,8,8,1,8,0,7,9,0,0,7,2,6,4,5,7,0,0,9,7,4,2,1,2,9,9,2,8,1,1,4,0,2,2,1,2,2,1,2,4,3,9,7,0,3,4,7,3,4,6,2,0,0,3,3,9,3,5,9,6,9,4,8,1,8,0,3,3,3,5,7,6,4,6,6,9,0,5,4,7,3,6,7,4,0,0,3,5,6,3,3,5,9,1,8,7,3,1,0,8,7,8,5,3,4,3,5,7,9,1,4,4,8,1,8,0,2,4,7,0,9,0,7,8,3,5,7,7,6,8,5,5,8,2,1,2,8,8,9,9,9,5,3,9,7,4,9,1,0,8,1,9,0,8,9,4,5,6,3,1,6,0,9,4,3,2,7,1,0,8,0,1,4,5,1,3,9,2,4,9,1,5,0,1,5,1,7,0,0,0,3,6,1,4,1,4,8,0,7,8,8,9,2,4,4,5,7,6,7,3,7,0,8,0,4,5,1,1,5,1,4,1,0,5,5,1,1,4,1,0,4,1,9,8,6,5,3,5,1,3,9,1,3,9,1,7,5,4,1,2,6,5,5,8,2,3,9,3,7,2,5,3,3,4,4,1,9,7,9,3,0,0,4,6,9,7,5,6,1,6,1,7,3,6,7,5,9,6,0,8,8,5,4,4,1,8,7,3,7,6,6,8,6,2,4,8,9,9,6,0,8,7,0,1,6,7,9,7,6,9,8,4,7,2,0,8,2,8,1,9,6,7,7,3,1,3,3,0,3,9,3,3,9,3,4,7,2,3,4,8,5,2,5,2,6,5,0,8,5,4,8,2,1,7,7,5,1,2,5,6,3,0,9,2,5,5,1,8,1,8,6,8,2,3,0,9,1,2,7,6,6,7,0,0,5,7,5,8,9,2,4,3,3,5,7,8,0,1,8,3,9,7,1,1,0,3,2,1,6,2,0,4,9,0,4,6,8,1,4,9,4,0,4,9,5,4,9,8,5,0,1,6,7,5,9,7,8,2,9,4,4,9,9,3,1,5,2,1,7,6,1,3,7,7,4,4,1,5,4,8,5,8,4,2,3,4,2,3,8,3,0,2,4,1,7,5,6,9,7,5,8,8,0,7,7,4,3,1]
res = superPow(a,b)
puts res
# a = Array[1,2,3]
# b = Array[4,3,9]
# res = arraySubtract(a, b)
# puts "#{res}"
# res = arrayMod(b, a)
# puts "#{res}"
